{"version":3,"sources":["api/todos.ts","api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","index.tsx"],"names":["id","title","completed","userId","name","username","email","UserInfo","user","className","href","TodoInfo","todo","TodoList","todos","map","App","useState","todosFromServer","listOfToDos","setListOfToDos","selectedUser","setSelectedUser","userError","setUserError","inputTitle","setInputTitle","titleError","setTitleError","ToDosWithUsers","usersFromServer","find","onSubmit","event","preventDefault","newToDo","Math","max","toDo","newList","addToDo","placeholder","value","onChange","target","handleTitleChange","handleUserChange","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6dd55920.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import { User } from '../../types/user';\n\nexport const UserInfo = ({ user }: { user: User | null }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {`${user?.name}`}\n  </a>\n);\n","import { UserInfo } from '../UserInfo';\n\nimport { ToDo } from '../../types/todo';\n\nexport const TodoInfo = ({ todo }: { todo: ToDo }) => (\n  <article\n    className={`TodoInfo ${todo.completed === true ? 'TodoInfo--completed' : ''}`}\n    data-id={todo.id}\n  >\n    <h2 className=\"TodoInfo__title\">{`${todo.title}`}</h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","// import usersFromServer from '../../api/users.json';\nimport { TodoInfo } from '../TodoInfo';\n\nimport { ToDo } from '../../types/todo';\n\n// function getUserById(userId) {\n//   return usersFromServer.find(user => user.id === userId)\n//       || null;\n// }\n\nexport const TodoList = ({ todos }: { todos: ToDo[] }) => (\n  <section className=\"TodoList\">\n    {todos.map(todo => (\n      <TodoInfo\n        todo={todo}\n        key={todo.id}\n      />\n    ))}\n  </section>\n);\n","import { useState } from 'react';\nimport './App.scss';\n\nimport todosFromServer from './api/todos';\nimport usersFromServer from './api/users';\nimport { TodoList } from './components/TodoList';\n\nexport const App = () => {\n  const [listOfToDos, setListOfToDos] = useState(todosFromServer);\n  const [selectedUser, setSelectedUser] = useState('-1');\n  const [userError, setUserError] = useState(false);\n  const [inputTitle, setInputTitle] = useState('');\n  const [titleError, setTitleError] = useState(false);\n  const ToDosWithUsers = listOfToDos.map(todo => ({\n    ...todo,\n    user: usersFromServer.find(user => user.id === todo.userId) || null,\n  }));\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setInputTitle(event.target.value);\n    setTitleError(false);\n  };\n\n  const handleUserChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(event.target.value);\n    setUserError(false);\n  };\n\n  const addToDo = () => {\n    if (selectedUser === '-1') {\n      setUserError(true);\n    }\n\n    if (!inputTitle) {\n      setTitleError(true);\n    }\n\n    if (selectedUser === '-1' || !inputTitle) {\n      return;\n    }\n\n    const newToDo = {\n      id: Math.max(...listOfToDos.map(toDo => toDo.id)) + 1,\n      title: inputTitle,\n      completed: false,\n      userId: +selectedUser,\n    };\n\n    const newList = [...listOfToDos, newToDo];\n\n    setListOfToDos(newList);\n    setSelectedUser('-1');\n    setInputTitle('');\n  };\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Static list of todos</h1>\n\n      <form\n        onSubmit={(event) => {\n          event.preventDefault();\n          addToDo();\n        }}\n      >\n        <div>\n          <input\n            data-cy=\"titleInput\"\n            placeholder=\"Enter Title\"\n            value={inputTitle}\n            onChange={(event) => handleTitleChange(event)}\n          />\n\n          {titleError && (<span className=\"error\">Please enter a title</span>)}\n        </div>\n\n        <div>\n          <select\n            value={selectedUser}\n            onChange={(event) => handleUserChange(event)}\n            data-cy=\"userSelect\"\n          >\n            <option value=\"-1\">\n              Choose a user\n            </option>\n\n            {usersFromServer.map(user => (\n              <option key={user.id} value={user.id}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {userError && (<span className=\"error\">Please choose a user</span>)}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={ToDosWithUsers} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}